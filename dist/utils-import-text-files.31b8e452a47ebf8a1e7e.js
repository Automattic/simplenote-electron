"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[9754],{41268:function(t,e,r){var o=r(41705),a=r(96827),i=r(17243);function n(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);e&&(o=o.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,o)}return r}function s(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?n(Object(r),!0).forEach((function(e){(0,o.A)(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}var c=["content","creationDate","deleted","markdown","modificationDate","pinned","tags"];class d extends a.EventEmitter{constructor(t){var e;super(),e=this,(0,o.A)(this,"importNote",(function(t){var{isTrashed:r=!1,isMarkdown:o=!1}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},a=(0,i.pick)(t,c);if(a.publishURL="",a.shareURL="",a.deleted=r,a.tags=(0,i.get)(a,"tags",[]),a.systemTags=(0,i.get)(a,"systemTags",[]),a.pinned&&(a.systemTags.push("pinned"),delete a.pinned),(a.markdown||o)&&(a.systemTags.push("markdown"),delete a.markdown),a.creationDate&&isNaN(a.creationDate)&&(a.creationDate=new Date(a.creationDate).getTime()/1e3),a.creationDate=a.creationDate||a.modificationDate||Date.now(),a.modificationDate=a.modificationDate||a.creationDate||Date.now(),Object.prototype.hasOwnProperty.call(a,"content")||(a.content=""),a.tags){var n=a.tags.map((t=>{var e=t.replace(/(\r\n|\n|\r|\s|,)/gm,"");return(0,i.isEmpty)(e)?void 0:e}));a.tags=n.filter((t=>void 0!==t))}e.addNote(a)})),(0,o.A)(this,"importNotes",(function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},r=arguments.length>1?arguments[1]:void 0;if((0,i.isEmpty)(t))e.emit("status","error","No notes to import.");else{if(t.activeNotes||t.trashedNotes){var o=(0,i.get)(t,"activeNotes",[]).map((t=>e.importNote(t,r))),a=(0,i.get)(t,"trashedNotes",[]).map((t=>e.importNote(t,s(s({},r),{},{isTrashed:!0}))));return Promise.all(o.concat(a))}e.emit("status","error","Invalid import format: No active or trashed notes found.")}})),this.addNote=t}}e.A=d},47616:function(t,e,r){r.r(e);var o=r(41705),a=r(96827),i=r(41268),n=r(17243);class s extends a.EventEmitter{constructor(t,e,r){super(),(0,o.A)(this,"importNotes",(t=>{var e=new i.A(this.addNote),r=0,o="";if(t)for(var a=t=>{var a;if(/\.(txt|md)$/.test(null!==(a=null==t?void 0:t.name.toLowerCase())&&void 0!==a?a:"")&&!(t.size>1e6)){var i=new FileReader;i.onload=a=>{var i=a.target.result,s=t.name.substring(0,t.name.lastIndexOf("."));if((0,n.startsWith)(i,s)||(i=s+"\n\n"+i),i){var c=t.lastModified/1e3;e.importNote({content:i,modificationDate:c,creationDate:c},this.options),r++,t.name===o?(this.emit("status","complete",r),this.recordEvent("importer_import_completed",{source:"plaintext",note_count:r})):this.emit("status","progress",r)}},i.readAsText(t)}},s=0;s<t.length;s++){var c=t[s];s+1===t.length&&(o=c.name),a(c)}else this.emit("status","error","No files to import.")})),this.addNote=t,this.options=e,this.recordEvent=r}}e.default=s}}]);