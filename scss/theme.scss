/*
 * Regenerate the Simplenote Tasks font with the following script.
 * Download the SVG task icons from the Simplecons repo
 *
 * // gen.js
 * const wfg = require('webfonts-generator');
 *
 * wfg({
 * 	files: [
 * 		'svg/task-unchecked.svg',
 * 		'svg/task-checked.svg'
 * 	],
 * 	dest: 'font/',
 * 	fontName: 'Simplenote Tasks',
 * 	types: ['woff'],
 * 	startCodepoint: 0xE000,
 * 	descent: 3, // needed to vertically align the tasks
 * }, () => {} );
 *
 * Once the script finishes copy the output here
 * ~$ node gen.js && cat font/Simplenote\ Tasks.woff | base64 | pbcopy
 */
@font-face {
  font-family: 'Simplenote Tasks';
  src: url('data:application/x-font-woff;charset=utf8-8;base64,d09GRgABAAAAAAQgAAsAAAAABrwAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAABHU1VCAAABCAAAADsAAABUIIslek9TLzIAAAFEAAAAPwAAAFYpRjXwY21hcAAAAYQAAABPAAABfmBD5KlnbHlmAAAB1AAAAGAAAACINxFu0WhlYWQAAAI0AAAAMAAAADYV/A6waGhlYQAAAmQAAAAcAAAAJAAtABlobXR4AAACgAAAAAwAAAAMADAAAGxvY2EAAAKMAAAACAAAAAgAIABEbWF4cAAAApQAAAAeAAAAIAEPACJuYW1lAAACtAAAAT8AAAJzQ72hRHBvc3QAAAP0AAAAKgAAAEeHVaHleJxjYGRgYOBiMGCwY2BycfMJYeDLSSzJY5BiYGGAAJA8MpsxJzM9kYEDxgPKsYBpDiBmg4gCACY7BUgAeJxjYGQQYJzAwMrAwMDPIAAkmaE0NwMjAxsDAxMDKzMDVhCQ5prC4PCA4QEjg+j/v0CFogwglYwgOQC9ZgaRAHic7ZCxDYAwDATPiaFAjEFBwTBUzM8mydtmDF66k/7lysACdHEJB3swIrdWy72z5e4ceeOxvzaGTFjd001a+bOnz6+1+FNRnytoE7boCy0AeJxjYGJg+P+fQYxBiIGFQYSBwdxQVNnUXFmJTZZRRMya0cjMltFETZiPj48RCECEAB8fE4QFIhgYEPr5GUSB+tG0squbi5uLC8O1c7EwMrMzCiFM4GMFCjAxAAC/8AuCeJxjYGRgYADiawd0bOP5bb4ycDNIAEUYbidnHEXQ//8ziDEIAbkcDEwgUQA3/ArKeJxjYGRgYBD9/xdISjCAgBgDIwMqYAYAQWsCRQAAAAAAGAAAABgAAAAAAAAAIABEeJxjYGRgYGBmEGNgYgABEMkFhAwM/8F8BgAK7wEyAAB4nIWOy2rCQBSG/3grVWgLQrsrs2oXhXjZFFx2oeuquI860WiSCZNRELrvso/SJ3Dbt+ijFPqbHhCkYIZkvvNfDgFwgy94ODweGcIlXHD64zLpTrhCfhSuooFn4Rqu8SJcxxNehRto4o0bvMolFYUP4RKu8Clcpr4XrpC/hau4xY9wDfdeU7iOidcRbuDBex9FSRbr1DitxkG+zod6sYkDeyqfzhNt88ikquO3j1bhDHSqbeD0XE13Kt8uus6FKrQmUX2TOh3HRmXWrPTM+Uvnsl6rFYruz0yCESIkyBBDI4WB460wRoAca75Dzgts6AewZ9Pn/Alnyzuil9LpwEf739axMyjUQy8onDl7U+z4zbHlv3WpOoScQ2YMNyn0i/2HdMxjqGSFt6Iyo+5jWbQy9NDiCU/yPlPc9As0/naZAHicY2BiwA+YGZkYmRlZGPhKEouzdUvzkjNSk7NTU3jAXCiHgQEAqZ8KXQAA')
    format('woff2');
  unicode-range: U+E000-E001;
}

.note-detail-preview,
.note-content-plaintext.visible {
  padding: 0 calc((100% - 768px) / 2);
}

@media only screen and (max-width: 1400px) {
  .note-detail-preview,
  .note-content-plaintext.visible {
    padding: 0 10%;
  }
}

/* Monaco adds the dir='ltr' attribute to rtl languages.
   This does the opposite of what you think it should do.
*/
span[dir='ltr'] {
  float: right;
  margin-right: calc(100% - 768px);
}

.is-line-length-full {
  .note-detail-preview,
  .note-content-plaintext.visible {
    padding: 0 25px;
  }

  span[dir='ltr'] {
    margin-right: 20px;
  }
}

@media only screen and (max-width: 1400px) {
  span[dir='ltr'] {
    margin-right: 14%;
  }
}

.react-monaco-editor-container {
  .scrollbar.vertical {
    width: 10px !important;
    right: 0 !important;

    .slider {
      width: 10px !important;
    }
  }
}
// scrollbar search highlights
.decorationsOverviewRuler {
  width: 10px !important;
  right: -2px !important;
}

.note-content-editor-shell,
.note-detail-markdown {
  height: 100%;
  width: 100%;
  font-family: 'Simplenote Tasks', $sans, sans-serif;

  .slider {
    border-radius: 10px;
    border: 3px solid gray;
  }
  .search-decoration {
    background-color: var(--search-highlight-color);
  }
  .selected-search {
    background-color: var(--search-selection-color);
    padding: 2px 0;
  }
}

/* Safari requires that it be displayed absolute so that it takes the full height
*/
.note-content-editor-shell {
  height: 100%;
  left: 0;
  position: absolute;
  top: 0;
  width: 100%;
}

.note-detail-textarea .note-content-editor-shell.cursor-pointer div {
  cursor: pointer;
}

.note-content-plaintext {
  display: none;
  font-size: 16px;
  white-space: pre-wrap;

  &.visible {
    display: inherit;
  }
}

body[data-theme='light'] {
  background-color: var(--background-color);
  color: var(--foreground-color);

  .theme-color-bg {
    background-color: var(--background-color);
  }
  .theme-color-bg-lighter {
    background-color: var(--background-color);
  }
  .theme-color-fg {
    color: var(--primary-color);
  }
  .theme-color-fg-dim {
    color: var(--foreground-color);
  }
  .theme-color-border,
  &.theme-color-border,
  .button {
    border-color: var(--secondary-color);
  }
  .button-borderless {
    color: var(--accent-color);
  }

  .note-list-item-pinned .note-list-item-pinner {
    color: var(--accent-color);
  }
}

.theme-light.theme-color-border {
  border-color: var(--secondary-color);
}

body[data-theme='dark'] {
  background-color: var(--background-color);
  color: var(--foreground-color);

  .theme-color-bg {
    background-color: var(--background-color);
  }
  .theme-color-bg-lighter {
    background-color: var(--background-color);
  }
  .theme-color-fg {
    color: var(--primary-color);
  }
  .theme-color-fg-dim {
    color: var(--foreground-color);
  }
  .theme-color-border,
  &.theme-color-border,
  .button {
    border-color: var(--secondary-color);
  }

  ::-webkit-scrollbar-thumb {
    background-color: var(--secondary-color);
    border-color: var(--tertiary-color);
  }
  ::-webkit-scrollbar-thumb:hover {
    background-color: var(--background-color);
  }
  ::-webkit-scrollbar-thumb:active {
    background-color: var(--tertiary-color);
  }

  .button-borderless {
    color: var(--accent-color);

    &[disabled],
    &:disabled {
      svg[class^='icon-'] {
        fill: var(--tertiary-color);
      }
    }
  }

  .icon-button,
  a {
    color: var(--foreground-color);
  }
  a.button {
    color: var(--primary-color);
  }

  input {
    color: var(--primary-color);
  }

  input,
  textarea {
    border-color: var(--secondary-accent-color);
    background-color: transparent;
  }

  .checkbox-control-base {
    border-color: var(--secondary-color);
  }

  .navigation-bar-item {
    button {
      color: var(--primary-color);
    }
    svg[class^='icon-'] {
      fill: var(--foreground-color);
    }
  }

  .navigation-bar-item.is-selected,
  .tag-list-item.is-selected {
    background-color: var(--highlight-color);

    svg[class^='icon-'] {
      fill: var(--primary-color);
    }
    button {
      color: var(--primary-color);
    }
  }

  .tag-field input {
    background: transparent;

    &::placeholder {
      color: var(--foreground-color);
    }
  }

  .search-decoration {
    background-color: var(--search-highlight-color);
  }
  .selected-search {
    background-color: var(--search-selection-color);
    color: var(--background-color);
  }

  .settings-group p {
    color: var(--settings-fg-color);
  }

  .note-list-header {
    color: var(--foreground-color);
  }

  .note-list {
    .note-list-item-selected {
      background: var(--highlight-color);
      .note-list-item-excerpt,
      .note-list-item-published-icon,
      .note-list-item-pending-changes {
        color: var(--primary-color);
      }
      .note-list-item-pending-changes {
        &.is-offline svg {
          fill: var(--foreground-color);
        }
      }
      &.note-list-item-pinned .note-list-item-pinner {
        color: var(--primary-color);
      }
    }

    .note-list-item-pinned:not(.note-list-item-selected) {
      .note-list-item-pinner {
        color: var(--accent-color);
      }
    }

    .note-list-item:not(.note-list-item-pinned):hover {
      .note-list-item-pinner {
        color: rgba(255, 255, 255, 0.4);
      }
    }

    .note-list-item:not(.note-list-item-selected) {
      &:hover {
        background: var(--secondary-color);
      }
    }
  }

  .note-detail-markdown {
    @import '../node_modules/highlight.js/scss/solarized-dark.scss';

    hr {
      border-color: var(--secondary-color);
    }

    blockquote {
      border-color: var(--secondary-color);
    }

    pre {
      border-color: var(--secondary-color);
    }

    table {
      th,
      td {
        border-color: var(--tertiary-color);
      }
      tr:nth-child(2n) {
        background-color: var(--secondary-color);
      }
    }
  }

  .search-results {
    color: var(--primary-color);
    border-color: var(--secondary-color);
    background-color: var(--background-color);

    button svg {
      fill: var(--accent-color);
    }
  }
}
