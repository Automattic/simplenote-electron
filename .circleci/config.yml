version: 2.1

orbs:
  win: circleci/windows@2.2.0

references:
  job_filters: &job_filters
    branches:
      ignore:
        - webapp
        - webapp-develop
        - webapp-staging
    tags:
      only: /.*/
  restore_nvm: &restore_nvm
    restore_cache:
      name: Restoring NVM cache
      keys:
        - v1-nvm-0-33-11-{{ arch }}-{{ checksum ".nvmrc" }}
        - v1-nvm-0-33-11-{{ arch }}
  setup_nvm: &setup_nvm
    run:
      name: Install nvm and node version
      command: |
        set +e
        set +u
        set +x
        NODE_VERSION=$(cat .nvmrc)
        export NVM_DIR="${HOME}/.nvm"
        mkdir -p "$NVM_DIR"
        if [ ! -f "${NVM_DIR}/nvm.sh" ]; then
          curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh | bash
        fi
        [ -s "${NVM_DIR}/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
        nvm install "$NODE_VERSION"
        nvm alias default "$NODE_VERSION"
        nvm use "$NODE_VERSION"
  save_nvm: &save_nvm
    save_cache:
      name: Saving NVM cache
      key: v1-nvm-0-33-11-{{ arch }}-{{ checksum ".nvmrc" }}
      paths:
        - ~/.nvm
  npm_install: &npm_install
    run:
      name: Npm install
      command: |
        source $HOME/.nvm/nvm.sh
        nvm use
        npm ci
  npm_restore_cache: &npm_restore_cache
    restore_cache:
      name: Restore npm cache
      keys:
        - v2-npm-{{ arch }}-{{ checksum "package-lock.json" }}
  npm_save_cache: &npm_save_cache
    save_cache:
      name: Save npm cache
      key: v2-npm-{{ arch }}-{{ checksum "package-lock.json" }}
      paths:
        - ~/.npm
  app_cache_paths: &app_cache_paths
    - dist
    - desktop
    - resources
    - config.json
  install_linux_deps: &install_linux_deps
    run:
      name: Install linux dev dependencies
      command: |
        sudo dpkg --add-architecture i386
        sudo apt update
        sudo apt -y install libxkbfile-dev libxkbfile-dev:i386 libxext-dev libx11-dev libx11-dev:i386 libxss-dev gcc-multilib g++-multilib rpm

jobs:
  build:
    docker:
      - image: circleci/node:12.14.0
    shell: /bin/bash --login
    working_directory: ~/simplenote
    steps:
      - *install_linux_deps
      - checkout
      - run:
          name: Decrypt assets
          command: |
            openssl aes-256-cbc -md md5 -d -in ./resources/certificates/win.p12.enc -out ./resources/certificates/win.p12 -k ${SECRETS_ENCRYPTION_KEY}
            openssl aes-256-cbc -md md5 -d -in ./resources/certificates/mac.p12.enc -out ./resources/certificates/mac.p12 -k ${SECRETS_ENCRYPTION_KEY}
            openssl aes-256-cbc -md md5 -d -in ./resources/secrets/config.json.enc -out ./config.json -k ${SECRETS_ENCRYPTION_KEY}
      - *restore_nvm
      - *setup_nvm
      - *save_nvm
      - *npm_restore_cache
      - *npm_install
      - run: make build
      - run: make lint
      - run: make test
      - persist_to_workspace:
          root: ~/simplenote
          paths: *app_cache_paths

  linux:
    docker:
      - image: circleci/node:12.14.0
    working_directory: ~/simplenote
    steps:
      - checkout
      - attach_workspace:
          at: ~/simplenote
      - *restore_nvm
      - *setup_nvm
      - *save_nvm
      - *npm_restore_cache
      - *install_linux_deps
      - *npm_install
      - *npm_save_cache
      - run: make package-linux SKIP_BUILD=true
      - run:
          name: Release cleanup
          command: |
            set +e
            rm -rf release/github
            rm -rf release/linux-unpacked
      - persist_to_workspace:
          root: ~/simplenote
          paths:
            - release

  mac:
    macos:
      xcode: '10.0.0'
    shell: /bin/bash --login
    working_directory: /Users/distiller/simplenote
    steps:
      - checkout
      - attach_workspace:
          at: /Users/distiller/simplenote
      - *restore_nvm
      - *setup_nvm
      - *save_nvm
      - *npm_restore_cache
      - *npm_install
      - *npm_save_cache
      - run:
          name: Build Mac
          environment:
            CSC_LINK: resources/certificates/mac.p12
            CSC_FOR_PULL_REQUEST: true
          command: |
            make package-osx SKIP_BUILD=true
      - run:
          name: Release cleanup
          command: |
            set +e
            rm -rf release/github
            rm -rf release/mac
      - persist_to_workspace:
          root: /Users/distiller/simplenote
          paths:
            - release

  windows:
    executor:
      name: win/default
    working_directory: C:\Users\circleci\simplenote-electron
    environment:
      CSC_FOR_PULL_REQUEST: true
    steps:
      - checkout
      - attach_workspace:
          at: C:\Users\circleci\simplenote-electron
      - run:
          name: Install make
          command: cinst make
      - run:
          name: Install node version
          command: |
            $NODE_VERSION = Get-Content .\.nvmrc
            nvm install $NODE_VERSION
            nvm use $NODE_VERSION
      - run:
          name: Npm install
          command: |
            npm ci
      - run:
          name: Build windows
          command: |
            # Workaround for Sign Tool "private key filter" bug in Circle's Windows image.
            # Ref: https://travis-ci.community/t/codesigning-on-windows/
            # 
            # Fix: Import .p12 into the local certificate store. Sign Tool will use 
            # package.json's `certificateSubjectName` to find the imported cert.
            Import-PfxCertificate -FilePath C:\Users\circleci\simplenote-electron\resources\certificates\win.p12 -CertStoreLocation Cert:\LocalMachine\Root -Password (ConvertTo-SecureString -String $env:WIN_CSC_KEY_PASSWORD -AsPlainText -Force)
            make package-win32 IS_WINDOWS=true
            npx electron-builder --win -p onTag
      - persist_to_workspace:
          root: C:\Users\circleci\simplenote-electron
          paths:
            - release\*.exe
            - release\*.appx
            - release\*.yml
  artifacts:
    docker:
      - image: buildpack-deps:trusty
    working_directory: simplenote
    steps:
      - attach_workspace:
          at: /tmp/simplenote
      - store_artifacts:
          path: /tmp/simplenote/release

workflows:
  version: 2
  simplenote:
    jobs:
      - build:
          filters: *job_filters
      - linux:
          requires:
            - build
          filters: *job_filters
      - mac:
          requires:
            - build
          filters: *job_filters
      - windows:
          requires:
            - build
          filters: *job_filters
      - artifacts:
          requires:
            - linux
            - mac
            - windows
          filters: *job_filters
